# ~/.tmux.conf

set-option -g prefix C-b
bind-key -T prefix C-b send-prefix

set-option -g renumber-windows on
set-option -g mouse on
set-option -g base-index 1
set-option -g focus-events on
set-option -g default-terminal "xterm-256color"
set-option -s escape-time 0
set-window-option -g mode-keys vi
set-window-option -g xterm-keys on
set-window-option -g allow-rename off
set-window-option -g automatic-rename off

bind-key -T prefix -r \;    command-prompt
bind-key -T prefix -r h    select-pane -L
bind-key -T prefix -r j    select-pane -D
bind-key -T prefix -r k    select-pane -U
bind-key -T prefix -r l    select-pane -R
bind-key -T prefix -r H    swap-pane -s '{left-of}'
bind-key -T prefix -r J    swap-pane -s '{down-of}'
bind-key -T prefix -r K    swap-pane -s '{up-of}'
bind-key -T prefix -r L    swap-pane -s '{right-of}'
bind-key -T prefix -r +    resize-pane -U
bind-key -T prefix -r -    resize-pane -D
bind-key -T prefix -r <    resize-pane -L
bind-key -T prefix -r >    resize-pane -R
bind-key -T prefix s       split-window
bind-key -T prefix v       split-window -h
bind-key -T prefix c       kill-pane
bind-key -T prefix z       resize-pane -Z
bind-key -T prefix V       select-layout even-horizontal
bind-key -T prefix S       select-layout even-vertical
bind-key -T prefix C-v     select-layout main-horizontal
bind-key -T prefix C-s     select-layout main-vertical
bind-key -T prefix e       select-layout tiled
bind-key -T prefix Space   next-layout
bind-key -T prefix n       command-prompt "new-window -n '%%'"
bind-key -T prefix N       command-prompt "new-session -n '%%'"
bind-key -T prefix m       command-prompt -1 "move-pane -t :'%%'"
bind-key -T prefix r       command-prompt -I "#W" "rename-window -- '%%'"
bind-key -T prefix R       command-prompt -I "#S" "rename-session -- '%%'"
bind-key -T prefix C-r     source-file ~/.tmux.conf
bind-key -T prefix /       choose-tree -Zs
bind-key -T prefix y       copy-mode
bind-key -T prefix p       paste-buffer
bind-key -T prefix P       run-shell "tmux set-buffer \"$(xclip -out -selection clipboard)\"; tmux paste-buffer"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

set-option -g status-style bg=blue,fg=white
set-option -g pane-border-style fg='cyan'
set-option -g pane-active-border-style fg='white'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
